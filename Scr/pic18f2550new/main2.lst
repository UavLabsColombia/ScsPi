CCS PCH C Compiler, Version 5.015, 5967               18-dic.-17 23:14

               Filename:   C:\Users\Andres\Documents\GitHub\ScsPi\Scr\pic18f2550new\main2.lst

               ROM used:   3342 bytes (10%)
                           Largest free fragment is 29422
               RAM used:   34 (2%) at main() level
                           61 (3%) worst case
               Stack used: 4 locations (2 in main + 2 for interrupts)
               Stack size: 31

*
0000:  GOTO   0924
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  F9D.5
004A:  GOTO   0054
004E:  BTFSC  F9E.5
0050:  GOTO   00D4
0054:  MOVFF  0E,00
0058:  MOVFF  0F,01
005C:  MOVFF  10,02
0060:  MOVFF  11,03
0064:  MOVFF  0C,FE9
0068:  MOVFF  07,FEA
006C:  BSF    07.7
006E:  MOVFF  08,FE1
0072:  MOVFF  09,FE2
0076:  MOVFF  0A,FD9
007A:  MOVFF  0B,FDA
007E:  MOVFF  12,FF3
0082:  MOVFF  13,FF4
0086:  MOVFF  14,FFA
008A:  MOVF   04,W
008C:  MOVFF  06,FE0
0090:  MOVFF  05,FD8
0094:  RETFIE 0
.................... // Convertidor de Analogo a Digital 
.................... #include <18F2550.h> 
.................... //////////// Standard Header file for the PIC18F2550 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC18F2550 
*
0114:  MOVLW  8E
0116:  MOVWF  00
0118:  MOVFF  23,01
011C:  MOVFF  22,02
0120:  CLRF   03
0122:  MOVF   01,F
0124:  BNZ   0138
0126:  MOVFF  02,01
012A:  CLRF   02
012C:  MOVLW  08
012E:  SUBWF  00,F
0130:  MOVF   01,F
0132:  BNZ   0138
0134:  CLRF   00
0136:  BRA    0148
0138:  BCF    FD8.0
013A:  BTFSC  01.7
013C:  BRA    0146
013E:  RLCF   02,F
0140:  RLCF   01,F
0142:  DECF   00,F
0144:  BRA    0138
0146:  BCF    01.7
0148:  GOTO   0252 (RETURN)
014C:  MOVF   2F,W
014E:  BTFSC  FD8.2
0150:  BRA    0234
0152:  MOVWF  00
0154:  MOVF   33,W
0156:  BTFSC  FD8.2
0158:  BRA    0234
015A:  ADDWF  00,F
015C:  BNC   0166
015E:  MOVLW  81
0160:  ADDWF  00,F
0162:  BC    0234
0164:  BRA    016E
0166:  MOVLW  7F
0168:  SUBWF  00,F
016A:  BNC   0234
016C:  BZ    0234
016E:  MOVFF  30,37
0172:  MOVF   34,W
0174:  XORWF  37,F
0176:  BSF    30.7
0178:  BSF    34.7
017A:  MOVF   32,W
017C:  MULWF  36
017E:  MOVFF  FF4,39
0182:  MOVF   31,W
0184:  MULWF  35
0186:  MOVFF  FF4,03
018A:  MOVFF  FF3,38
018E:  MULWF  36
0190:  MOVF   FF3,W
0192:  ADDWF  39,F
0194:  MOVF   FF4,W
0196:  ADDWFC 38,F
0198:  MOVLW  00
019A:  ADDWFC 03,F
019C:  MOVF   32,W
019E:  MULWF  35
01A0:  MOVF   FF3,W
01A2:  ADDWF  39,F
01A4:  MOVF   FF4,W
01A6:  ADDWFC 38,F
01A8:  MOVLW  00
01AA:  CLRF   02
01AC:  ADDWFC 03,F
01AE:  ADDWFC 02,F
01B0:  MOVF   30,W
01B2:  MULWF  36
01B4:  MOVF   FF3,W
01B6:  ADDWF  38,F
01B8:  MOVF   FF4,W
01BA:  ADDWFC 03,F
01BC:  MOVLW  00
01BE:  ADDWFC 02,F
01C0:  MOVF   30,W
01C2:  MULWF  35
01C4:  MOVF   FF3,W
01C6:  ADDWF  03,F
01C8:  MOVF   FF4,W
01CA:  ADDWFC 02,F
01CC:  MOVLW  00
01CE:  CLRF   01
01D0:  ADDWFC 01,F
01D2:  MOVF   32,W
01D4:  MULWF  34
01D6:  MOVF   FF3,W
01D8:  ADDWF  38,F
01DA:  MOVF   FF4,W
01DC:  ADDWFC 03,F
01DE:  MOVLW  00
01E0:  ADDWFC 02,F
01E2:  ADDWFC 01,F
01E4:  MOVF   31,W
01E6:  MULWF  34
01E8:  MOVF   FF3,W
01EA:  ADDWF  03,F
01EC:  MOVF   FF4,W
01EE:  ADDWFC 02,F
01F0:  MOVLW  00
01F2:  ADDWFC 01,F
01F4:  MOVF   30,W
01F6:  MULWF  34
01F8:  MOVF   FF3,W
01FA:  ADDWF  02,F
01FC:  MOVF   FF4,W
01FE:  ADDWFC 01,F
0200:  INCF   00,F
0202:  BTFSC  01.7
0204:  BRA    0210
0206:  RLCF   38,F
0208:  RLCF   03,F
020A:  RLCF   02,F
020C:  RLCF   01,F
020E:  DECF   00,F
0210:  MOVLW  00
0212:  BTFSS  38.7
0214:  BRA    022A
0216:  INCF   03,F
0218:  ADDWFC 02,F
021A:  ADDWFC 01,F
021C:  MOVF   01,W
021E:  BNZ   022A
0220:  MOVF   02,W
0222:  BNZ   022A
0224:  MOVF   03,W
0226:  BNZ   022A
0228:  INCF   00,F
022A:  BTFSC  37.7
022C:  BSF    01.7
022E:  BTFSS  37.7
0230:  BCF    01.7
0232:  BRA    023C
0234:  CLRF   00
0236:  CLRF   01
0238:  CLRF   02
023A:  CLRF   03
023C:  RETURN 0
*
0276:  MOVFF  27,2E
027A:  MOVF   2B,W
027C:  XORWF  2E,F
027E:  BTFSS  2E.7
0280:  BRA    028C
0282:  BCF    FD8.2
0284:  BCF    FD8.0
0286:  BTFSC  27.7
0288:  BSF    FD8.0
028A:  BRA    02EA
028C:  MOVFF  27,2E
0290:  MOVFF  2A,2F
0294:  MOVF   26,W
0296:  SUBWF  2F,F
0298:  BZ    02A6
029A:  BTFSS  2E.7
029C:  BRA    02EA
029E:  MOVF   FD8,W
02A0:  XORLW  01
02A2:  MOVWF  FD8
02A4:  BRA    02EA
02A6:  MOVFF  2B,2F
02AA:  MOVF   27,W
02AC:  SUBWF  2F,F
02AE:  BZ    02BC
02B0:  BTFSS  2E.7
02B2:  BRA    02EA
02B4:  MOVF   FD8,W
02B6:  XORLW  01
02B8:  MOVWF  FD8
02BA:  BRA    02EA
02BC:  MOVFF  2C,2F
02C0:  MOVF   28,W
02C2:  SUBWF  2F,F
02C4:  BZ    02D2
02C6:  BTFSS  2E.7
02C8:  BRA    02EA
02CA:  MOVF   FD8,W
02CC:  XORLW  01
02CE:  MOVWF  FD8
02D0:  BRA    02EA
02D2:  MOVFF  2D,2F
02D6:  MOVF   29,W
02D8:  SUBWF  2F,F
02DA:  BZ    02E8
02DC:  BTFSS  2E.7
02DE:  BRA    02EA
02E0:  MOVF   FD8,W
02E2:  XORLW  01
02E4:  MOVWF  FD8
02E6:  BRA    02EA
02E8:  BCF    FD8.0
02EA:  GOTO   09BA (RETURN)
02EE:  MOVLW  80
02F0:  BTFSC  FD8.1
02F2:  XORWF  29,F
02F4:  CLRF   2E
02F6:  CLRF   2F
02F8:  MOVFF  25,2D
02FC:  MOVF   29,W
02FE:  XORWF  2D,F
0300:  MOVF   24,W
0302:  BTFSC  FD8.2
0304:  BRA    04BE
0306:  MOVWF  2C
0308:  MOVWF  00
030A:  MOVF   28,W
030C:  BTFSC  FD8.2
030E:  BRA    04D0
0310:  SUBWF  2C,F
0312:  BTFSC  FD8.2
0314:  BRA    0418
0316:  BNC   0392
0318:  MOVFF  29,32
031C:  BSF    32.7
031E:  MOVFF  2A,31
0322:  MOVFF  2B,30
0326:  CLRF   2F
0328:  BCF    FD8.0
032A:  RRCF   32,F
032C:  RRCF   31,F
032E:  RRCF   30,F
0330:  RRCF   2F,F
0332:  DECFSZ 2C,F
0334:  BRA    0326
0336:  BTFSS  2D.7
0338:  BRA    0340
033A:  BSF    2E.0
033C:  BRA    04F8
033E:  BCF    2E.0
0340:  BCF    2C.0
0342:  BSF    2E.4
0344:  CLRF   FEA
0346:  MOVLW  27
0348:  MOVWF  FE9
034A:  BRA    051E
034C:  BCF    2E.4
034E:  BTFSC  2D.7
0350:  BRA    0366
0352:  BTFSS  2C.0
0354:  BRA    037C
0356:  RRCF   32,F
0358:  RRCF   31,F
035A:  RRCF   30,F
035C:  RRCF   2F,F
035E:  INCF   00,F
0360:  BTFSC  FD8.2
0362:  BRA    04EE
0364:  BRA    037C
0366:  BTFSC  32.7
0368:  BRA    0382
036A:  BCF    FD8.0
036C:  RLCF   2F,F
036E:  RLCF   30,F
0370:  RLCF   31,F
0372:  RLCF   32,F
0374:  DECF   00,F
0376:  BTFSC  FD8.2
0378:  BRA    04EE
037A:  BRA    0366
037C:  BSF    2E.6
037E:  BRA    0456
0380:  BCF    2E.6
0382:  MOVFF  25,2D
0386:  BTFSS  25.7
0388:  BRA    038E
038A:  BSF    32.7
038C:  BRA    04E0
038E:  BCF    32.7
0390:  BRA    04E0
0392:  MOVFF  28,2C
0396:  MOVFF  28,00
039A:  MOVF   24,W
039C:  SUBWF  2C,F
039E:  MOVFF  25,32
03A2:  BSF    32.7
03A4:  MOVFF  26,31
03A8:  MOVFF  27,30
03AC:  CLRF   2F
03AE:  BCF    FD8.0
03B0:  RRCF   32,F
03B2:  RRCF   31,F
03B4:  RRCF   30,F
03B6:  RRCF   2F,F
03B8:  DECFSZ 2C,F
03BA:  BRA    03AC
03BC:  BTFSS  2D.7
03BE:  BRA    03C6
03C0:  BSF    2E.1
03C2:  BRA    04F8
03C4:  BCF    2E.1
03C6:  BCF    2C.0
03C8:  BSF    2E.5
03CA:  CLRF   FEA
03CC:  MOVLW  2B
03CE:  MOVWF  FE9
03D0:  BRA    051E
03D2:  BCF    2E.5
03D4:  BTFSC  2D.7
03D6:  BRA    03EC
03D8:  BTFSS  2C.0
03DA:  BRA    0402
03DC:  RRCF   32,F
03DE:  RRCF   31,F
03E0:  RRCF   30,F
03E2:  RRCF   2F,F
03E4:  INCF   00,F
03E6:  BTFSC  FD8.2
03E8:  BRA    04EE
03EA:  BRA    0402
03EC:  BTFSC  32.7
03EE:  BRA    0408
03F0:  BCF    FD8.0
03F2:  RLCF   2F,F
03F4:  RLCF   30,F
03F6:  RLCF   31,F
03F8:  RLCF   32,F
03FA:  DECF   00,F
03FC:  BTFSC  FD8.2
03FE:  BRA    04EE
0400:  BRA    03EC
0402:  BSF    2E.7
0404:  BRA    0456
0406:  BCF    2E.7
0408:  MOVFF  29,2D
040C:  BTFSS  29.7
040E:  BRA    0414
0410:  BSF    32.7
0412:  BRA    04E0
0414:  BCF    32.7
0416:  BRA    04E0
0418:  MOVFF  29,32
041C:  BSF    32.7
041E:  MOVFF  2A,31
0422:  MOVFF  2B,30
0426:  BTFSS  2D.7
0428:  BRA    0432
042A:  BCF    32.7
042C:  BSF    2E.2
042E:  BRA    04F8
0430:  BCF    2E.2
0432:  CLRF   2F
0434:  BCF    2C.0
0436:  CLRF   FEA
0438:  MOVLW  27
043A:  MOVWF  FE9
043C:  BRA    051E
043E:  BTFSC  2D.7
0440:  BRA    047A
0442:  MOVFF  25,2D
0446:  BTFSS  2C.0
0448:  BRA    0456
044A:  RRCF   32,F
044C:  RRCF   31,F
044E:  RRCF   30,F
0450:  RRCF   2F,F
0452:  INCF   00,F
0454:  BZ    04EE
0456:  BTFSS  2F.7
0458:  BRA    0470
045A:  INCF   30,F
045C:  BNZ   0470
045E:  INCF   31,F
0460:  BNZ   0470
0462:  INCF   32,F
0464:  BNZ   0470
0466:  RRCF   32,F
0468:  RRCF   31,F
046A:  RRCF   30,F
046C:  INCF   00,F
046E:  BZ    04EE
0470:  BTFSC  2E.6
0472:  BRA    0380
0474:  BTFSC  2E.7
0476:  BRA    0406
0478:  BRA    04B2
047A:  MOVLW  80
047C:  XORWF  32,F
047E:  BTFSS  32.7
0480:  BRA    048A
0482:  BRA    04F8
0484:  MOVFF  29,2D
0488:  BRA    049E
048A:  MOVFF  25,2D
048E:  MOVF   32,F
0490:  BNZ   049E
0492:  MOVF   31,F
0494:  BNZ   049E
0496:  MOVF   30,F
0498:  BNZ   049E
049A:  CLRF   00
049C:  BRA    04E0
049E:  BTFSC  32.7
04A0:  BRA    04B2
04A2:  BCF    FD8.0
04A4:  RLCF   2F,F
04A6:  RLCF   30,F
04A8:  RLCF   31,F
04AA:  RLCF   32,F
04AC:  DECFSZ 00,F
04AE:  BRA    049E
04B0:  BRA    04EE
04B2:  BTFSS  2D.7
04B4:  BRA    04BA
04B6:  BSF    32.7
04B8:  BRA    04E0
04BA:  BCF    32.7
04BC:  BRA    04E0
04BE:  MOVFF  28,00
04C2:  MOVFF  29,32
04C6:  MOVFF  2A,31
04CA:  MOVFF  2B,30
04CE:  BRA    04E0
04D0:  MOVFF  24,00
04D4:  MOVFF  25,32
04D8:  MOVFF  26,31
04DC:  MOVFF  27,30
04E0:  MOVFF  32,01
04E4:  MOVFF  31,02
04E8:  MOVFF  30,03
04EC:  BRA    0556
04EE:  CLRF   00
04F0:  CLRF   01
04F2:  CLRF   02
04F4:  CLRF   03
04F6:  BRA    0556
04F8:  CLRF   2F
04FA:  COMF   30,F
04FC:  COMF   31,F
04FE:  COMF   32,F
0500:  COMF   2F,F
0502:  INCF   2F,F
0504:  BNZ   0510
0506:  INCF   30,F
0508:  BNZ   0510
050A:  INCF   31,F
050C:  BNZ   0510
050E:  INCF   32,F
0510:  BTFSC  2E.0
0512:  BRA    033E
0514:  BTFSC  2E.1
0516:  BRA    03C4
0518:  BTFSC  2E.2
051A:  BRA    0430
051C:  BRA    0484
051E:  MOVF   FEF,W
0520:  ADDWF  30,F
0522:  BNC   052E
0524:  INCF   31,F
0526:  BNZ   052E
0528:  INCF   32,F
052A:  BTFSC  FD8.2
052C:  BSF    2C.0
052E:  MOVF   FED,F
0530:  MOVF   FEF,W
0532:  ADDWF  31,F
0534:  BNC   053C
0536:  INCF   32,F
0538:  BTFSC  FD8.2
053A:  BSF    2C.0
053C:  MOVF   FED,F
053E:  MOVF   FEF,W
0540:  BTFSC  FEF.7
0542:  BRA    0546
0544:  XORLW  80
0546:  ADDWF  32,F
0548:  BTFSC  FD8.0
054A:  BSF    2C.0
054C:  BTFSC  2E.4
054E:  BRA    034C
0550:  BTFSC  2E.5
0552:  BRA    03D2
0554:  BRA    043E
0556:  GOTO   0A38 (RETURN)
055A:  MOVF   22,W
055C:  BTFSC  FD8.2
055E:  BRA    06AA
0560:  MOVWF  2E
0562:  MOVF   26,W
0564:  BTFSC  FD8.2
0566:  BRA    06AA
0568:  SUBWF  2E,F
056A:  BNC   0576
056C:  MOVLW  7F
056E:  ADDWF  2E,F
0570:  BTFSC  FD8.0
0572:  BRA    06AA
0574:  BRA    0582
0576:  MOVLW  81
0578:  SUBWF  2E,F
057A:  BTFSS  FD8.0
057C:  BRA    06AA
057E:  BTFSC  FD8.2
0580:  BRA    06AA
0582:  MOVFF  2E,00
0586:  CLRF   01
0588:  CLRF   02
058A:  CLRF   03
058C:  CLRF   2D
058E:  MOVFF  23,2C
0592:  BSF    2C.7
0594:  MOVFF  24,2B
0598:  MOVFF  25,2A
059C:  MOVLW  19
059E:  MOVWF  2E
05A0:  MOVF   29,W
05A2:  SUBWF  2A,F
05A4:  BC    05C0
05A6:  MOVLW  01
05A8:  SUBWF  2B,F
05AA:  BC    05C0
05AC:  SUBWF  2C,F
05AE:  BC    05C0
05B0:  SUBWF  2D,F
05B2:  BC    05C0
05B4:  INCF   2D,F
05B6:  INCF   2C,F
05B8:  INCF   2B,F
05BA:  MOVF   29,W
05BC:  ADDWF  2A,F
05BE:  BRA    0610
05C0:  MOVF   28,W
05C2:  SUBWF  2B,F
05C4:  BC    05EA
05C6:  MOVLW  01
05C8:  SUBWF  2C,F
05CA:  BC    05EA
05CC:  SUBWF  2D,F
05CE:  BC    05EA
05D0:  INCF   2D,F
05D2:  INCF   2C,F
05D4:  MOVF   28,W
05D6:  ADDWF  2B,F
05D8:  MOVF   29,W
05DA:  ADDWF  2A,F
05DC:  BNC   0610
05DE:  INCF   2B,F
05E0:  BNZ   0610
05E2:  INCF   2C,F
05E4:  BNZ   0610
05E6:  INCF   2D,F
05E8:  BRA    0610
05EA:  MOVF   27,W
05EC:  IORLW  80
05EE:  SUBWF  2C,F
05F0:  BC    060E
05F2:  MOVLW  01
05F4:  SUBWF  2D,F
05F6:  BC    060E
05F8:  INCF   2D,F
05FA:  MOVF   27,W
05FC:  IORLW  80
05FE:  ADDWF  2C,F
0600:  MOVF   28,W
0602:  ADDWF  2B,F
0604:  BNC   05D8
0606:  INCF   2C,F
0608:  BNZ   05D8
060A:  INCF   2D,F
060C:  BRA    05D8
060E:  BSF    03.0
0610:  DECFSZ 2E,F
0612:  BRA    0616
0614:  BRA    062C
0616:  BCF    FD8.0
0618:  RLCF   2A,F
061A:  RLCF   2B,F
061C:  RLCF   2C,F
061E:  RLCF   2D,F
0620:  BCF    FD8.0
0622:  RLCF   03,F
0624:  RLCF   02,F
0626:  RLCF   01,F
0628:  RLCF   2F,F
062A:  BRA    05A0
062C:  BTFSS  2F.0
062E:  BRA    063C
0630:  BCF    FD8.0
0632:  RRCF   01,F
0634:  RRCF   02,F
0636:  RRCF   03,F
0638:  RRCF   2F,F
063A:  BRA    0640
063C:  DECF   00,F
063E:  BZ    06AA
0640:  BTFSC  2F.7
0642:  BRA    0680
0644:  BCF    FD8.0
0646:  RLCF   2A,F
0648:  RLCF   2B,F
064A:  RLCF   2C,F
064C:  RLCF   2D,F
064E:  MOVF   29,W
0650:  SUBWF  2A,F
0652:  BC    0662
0654:  MOVLW  01
0656:  SUBWF  2B,F
0658:  BC    0662
065A:  SUBWF  2C,F
065C:  BC    0662
065E:  SUBWF  2D,F
0660:  BNC   0696
0662:  MOVF   28,W
0664:  SUBWF  2B,F
0666:  BC    0672
0668:  MOVLW  01
066A:  SUBWF  2C,F
066C:  BC    0672
066E:  SUBWF  2D,F
0670:  BNC   0696
0672:  MOVF   27,W
0674:  IORLW  80
0676:  SUBWF  2C,F
0678:  BC    0680
067A:  MOVLW  01
067C:  SUBWF  2D,F
067E:  BNC   0696
0680:  INCF   03,F
0682:  BNZ   0696
0684:  INCF   02,F
0686:  BNZ   0696
0688:  INCF   01,F
068A:  BNZ   0696
068C:  INCF   00,F
068E:  BZ    06AA
0690:  RRCF   01,F
0692:  RRCF   02,F
0694:  RRCF   03,F
0696:  MOVFF  23,2E
069A:  MOVF   27,W
069C:  XORWF  2E,F
069E:  BTFSS  2E.7
06A0:  BRA    06A6
06A2:  BSF    01.7
06A4:  BRA    06B2
06A6:  BCF    01.7
06A8:  BRA    06B2
06AA:  CLRF   00
06AC:  CLRF   01
06AE:  CLRF   02
06B0:  CLRF   03
06B2:  GOTO   0A72 (RETURN)
06B6:  MOVF   2F,W
06B8:  SUBLW  B6
06BA:  MOVWF  2F
06BC:  CLRF   03
06BE:  MOVFF  30,33
06C2:  BSF    30.7
06C4:  BCF    FD8.0
06C6:  RRCF   30,F
06C8:  RRCF   31,F
06CA:  RRCF   32,F
06CC:  RRCF   03,F
06CE:  RRCF   02,F
06D0:  RRCF   01,F
06D2:  RRCF   00,F
06D4:  DECFSZ 2F,F
06D6:  BRA    06C4
06D8:  BTFSS  33.7
06DA:  BRA    06F2
06DC:  COMF   00,F
06DE:  COMF   01,F
06E0:  COMF   02,F
06E2:  COMF   03,F
06E4:  INCF   00,F
06E6:  BTFSC  FD8.2
06E8:  INCF   01,F
06EA:  BTFSC  FD8.2
06EC:  INCF   02,F
06EE:  BTFSC  FD8.2
06F0:  INCF   03,F
06F2:  GOTO   07D2 (RETURN)
06F6:  BTFSC  FD8.1
06F8:  BRA    0700
06FA:  CLRF   FEA
06FC:  MOVLW  37
06FE:  MOVWF  FE9
0700:  CLRF   00
0702:  CLRF   01
0704:  CLRF   02
0706:  CLRF   03
0708:  CLRF   37
070A:  CLRF   38
070C:  CLRF   39
070E:  CLRF   3A
0710:  MOVF   36,W
0712:  IORWF  35,W
0714:  IORWF  34,W
0716:  IORWF  33,W
0718:  BZ    0772
071A:  MOVLW  20
071C:  MOVWF  3B
071E:  BCF    FD8.0
0720:  RLCF   2F,F
0722:  RLCF   30,F
0724:  RLCF   31,F
0726:  RLCF   32,F
0728:  RLCF   37,F
072A:  RLCF   38,F
072C:  RLCF   39,F
072E:  RLCF   3A,F
0730:  MOVF   36,W
0732:  SUBWF  3A,W
0734:  BNZ   0746
0736:  MOVF   35,W
0738:  SUBWF  39,W
073A:  BNZ   0746
073C:  MOVF   34,W
073E:  SUBWF  38,W
0740:  BNZ   0746
0742:  MOVF   33,W
0744:  SUBWF  37,W
0746:  BNC   0766
0748:  MOVF   33,W
074A:  SUBWF  37,F
074C:  MOVF   34,W
074E:  BTFSS  FD8.0
0750:  INCFSZ 34,W
0752:  SUBWF  38,F
0754:  MOVF   35,W
0756:  BTFSS  FD8.0
0758:  INCFSZ 35,W
075A:  SUBWF  39,F
075C:  MOVF   36,W
075E:  BTFSS  FD8.0
0760:  INCFSZ 36,W
0762:  SUBWF  3A,F
0764:  BSF    FD8.0
0766:  RLCF   00,F
0768:  RLCF   01,F
076A:  RLCF   02,F
076C:  RLCF   03,F
076E:  DECFSZ 3B,F
0770:  BRA    071E
0772:  MOVFF  37,FEF
0776:  MOVFF  38,FEC
077A:  MOVFF  39,FEC
077E:  MOVFF  3A,FEC
0782:  RETURN 0
0784:  MOVF   FE9,W
0786:  MOVWF  27
0788:  MOVF   26,W
078A:  MOVWF  29
078C:  BZ    07C0
078E:  MOVFF  25,32
0792:  MOVFF  24,31
0796:  MOVFF  23,30
079A:  MOVFF  22,2F
079E:  CLRF   36
07A0:  CLRF   35
07A2:  MOVLW  20
07A4:  MOVWF  34
07A6:  MOVLW  82
07A8:  MOVWF  33
07AA:  RCALL  014C
07AC:  MOVFF  03,25
07B0:  MOVFF  02,24
07B4:  MOVFF  01,23
07B8:  MOVFF  00,22
07BC:  DECFSZ 29,F
07BE:  BRA    078E
07C0:  MOVFF  25,32
07C4:  MOVFF  24,31
07C8:  MOVFF  23,30
07CC:  MOVFF  22,2F
07D0:  BRA    06B6
07D2:  MOVFF  03,25
07D6:  MOVFF  02,24
07DA:  MOVFF  01,23
07DE:  MOVFF  00,22
07E2:  BTFSS  25.7
07E4:  BRA    0800
07E6:  DECF   27,F
07E8:  BSF    27.5
07EA:  COMF   22,F
07EC:  COMF   23,F
07EE:  COMF   24,F
07F0:  COMF   25,F
07F2:  INCF   22,F
07F4:  BTFSC  FD8.2
07F6:  INCF   23,F
07F8:  BTFSC  FD8.2
07FA:  INCF   24,F
07FC:  BTFSC  FD8.2
07FE:  INCF   25,F
0800:  MOVLW  3B
0802:  MOVWF  2E
0804:  MOVLW  9A
0806:  MOVWF  2D
0808:  MOVLW  CA
080A:  MOVWF  2C
080C:  CLRF   2B
080E:  MOVLW  0A
0810:  MOVWF  29
0812:  MOVF   26,W
0814:  BTFSC  FD8.2
0816:  INCF   27,F
0818:  BSF    FD8.1
081A:  CLRF   FEA
081C:  MOVLW  22
081E:  MOVWF  FE9
0820:  MOVFF  25,32
0824:  MOVFF  24,31
0828:  MOVFF  23,30
082C:  MOVFF  22,2F
0830:  MOVFF  2E,36
0834:  MOVFF  2D,35
0838:  MOVFF  2C,34
083C:  MOVFF  2B,33
0840:  RCALL  06F6
0842:  MOVF   01,W
0844:  MOVF   00,F
0846:  BNZ   0866
0848:  INCF   26,W
084A:  SUBWF  29,W
084C:  BZ    0866
084E:  MOVF   27,W
0850:  BZ    086A
0852:  ANDLW  0F
0854:  SUBWF  29,W
0856:  BZ    085A
0858:  BC    08D0
085A:  BTFSC  27.7
085C:  BRA    08D0
085E:  BTFSC  27.6
0860:  BRA    086A
0862:  MOVLW  20
0864:  BRA    08C6
0866:  MOVLW  20
0868:  ANDWF  27,F
086A:  BTFSS  27.5
086C:  BRA    0888
086E:  BCF    27.5
0870:  MOVF   26,W
0872:  BTFSS  FD8.2
0874:  DECF   27,F
0876:  MOVF   00,W
0878:  MOVWF  27
087A:  MOVLW  2D
087C:  BTFSS  F9E.4
087E:  BRA    087C
0880:  MOVWF  FAD
0882:  MOVF   27,W
0884:  MOVWF  00
0886:  CLRF   27
0888:  MOVF   26,W
088A:  SUBWF  29,W
088C:  BNZ   08A4
088E:  MOVF   00,W
0890:  MOVWF  27
0892:  MOVLW  2E
0894:  BTFSS  F9E.4
0896:  BRA    0894
0898:  MOVWF  FAD
089A:  MOVF   27,W
089C:  MOVWF  00
089E:  MOVLW  20
08A0:  ANDWF  27,F
08A2:  MOVLW  00
08A4:  MOVLW  30
08A6:  BTFSS  27.5
08A8:  BRA    08C6
08AA:  BCF    27.5
08AC:  MOVF   26,W
08AE:  BTFSS  FD8.2
08B0:  DECF   27,F
08B2:  MOVF   00,W
08B4:  MOVWF  27
08B6:  MOVLW  2D
08B8:  BTFSS  F9E.4
08BA:  BRA    08B8
08BC:  MOVWF  FAD
08BE:  MOVF   27,W
08C0:  MOVWF  00
08C2:  CLRF   27
08C4:  MOVLW  30
08C6:  ADDWF  00,F
08C8:  MOVF   00,W
08CA:  BTFSS  F9E.4
08CC:  BRA    08CA
08CE:  MOVWF  FAD
08D0:  BCF    FD8.1
08D2:  MOVFF  2E,32
08D6:  MOVFF  2D,31
08DA:  MOVFF  2C,30
08DE:  MOVFF  2B,2F
08E2:  CLRF   36
08E4:  CLRF   35
08E6:  CLRF   34
08E8:  MOVLW  0A
08EA:  MOVWF  33
08EC:  RCALL  06F6
08EE:  MOVFF  03,2E
08F2:  MOVFF  02,2D
08F6:  MOVFF  01,2C
08FA:  MOVFF  00,2B
08FE:  DECFSZ 29,F
0900:  BRA    0818
0902:  GOTO   0A9C (RETURN)
....................  
.................... #list 
....................  
....................  
.................... #fuses xt, nowdt, noprotect, put, CPUDIV1 
.................... // Numero de bits a utilizar sobre el convertidor analogo 
.................... #device adc = 10 
.................... #use delay(internal = 8000000) 
*
00AE:  CLRF   FEA
00B0:  MOVLW  3C
00B2:  MOVWF  FE9
00B4:  MOVF   FEF,W
00B6:  BZ    00D2
00B8:  MOVLW  02
00BA:  MOVWF  01
00BC:  CLRF   00
00BE:  DECFSZ 00,F
00C0:  BRA    00BE
00C2:  DECFSZ 01,F
00C4:  BRA    00BC
00C6:  MOVLW  97
00C8:  MOVWF  00
00CA:  DECFSZ 00,F
00CC:  BRA    00CA
00CE:  DECFSZ FEF,F
00D0:  BRA    00B8
00D2:  RETURN 0
*
0906:  MOVLW  09
0908:  SUBWF  23,F
090A:  BNC   0922
090C:  CLRF   FEA
090E:  MOVLW  23
0910:  MOVWF  FE9
0912:  BCF    FD8.0
0914:  RRCF   FEF,F
0916:  MOVF   FEF,W
0918:  BZ    0922
091A:  BRA    091E
091C:  NOP   
091E:  DECFSZ FEF,F
0920:  BRA    091C
0922:  RETURN 0
.................... #use rs232(baud = 9600, bits = 8, parity = N, xmit = PIN_C6, RCV = PIN_C7, stop=1, ERRORS) 
*
0096:  BTFSS  F9E.5
0098:  BRA    0096
009A:  MOVFF  FAB,17
009E:  MOVFF  FAE,01
00A2:  BTFSS  17.1
00A4:  BRA    00AA
00A6:  BCF    FAB.4
00A8:  BSF    FAB.4
00AA:  GOTO   00DA (RETURN)
....................  
.................... #use fast_io(b) 
.................... #use fast_io(a) 
.................... #use fast_io(c) 
....................  
.................... // ****************  Variables Globales  ******************* 
....................  
.................... // calculo de la resulucion en la salida 
.................... float resolucion = (float) 5 / (float) 1023; 
.................... char dato_recibido = '0'; 
.................... // se usa en los bucles  
.................... int i; 
....................  
.................... // Se define el puerto ADC a utilizar y sus pines. 
.................... void define_puertos() { 
....................  
....................     // Define el pin como entrada y el resto del puerto como salidas 
....................     //bin: 1000 0000 
....................     set_tris_b(0x80); 
*
00EA:  MOVLW  80
00EC:  MOVWF  F93
....................  
....................     // define la entrada 0 del puerto a como entrada 
....................     //bin: 0000 0001 
....................     set_tris_a(0x01); 
00EE:  MOVLW  01
00F0:  MOVWF  F92
....................     output_high(PIN_A5); 
00F2:  BSF    F89.5
....................     output_low(PIN_A3); 
00F4:  BCF    F89.3
....................  
....................     // se define el puerto c como salida 
....................     set_tris_c(0x00); 
00F6:  MOVLW  00
00F8:  MOVWF  F94
....................     output_c(0x00); 
00FA:  CLRF   F8B
....................  
....................     // Define como entradas analoga el puerto AN0 
....................     SETUP_ADC_PORTS(AN0); 
00FC:  MOVF   FC1,W
00FE:  ANDLW  C0
0100:  IORLW  0E
0102:  MOVWF  FC1
....................  
....................     // Define el relog interno para el uso del ADC 
....................     SETUP_ADC(ADC_CLOCK_INTERNAL); 
0104:  MOVF   FC0,W
0106:  ANDLW  C0
0108:  IORLW  07
010A:  MOVWF  FC0
010C:  BSF    FC0.7
010E:  BSF    FC2.0
0110:  GOTO   096C (RETURN)
.................... } 
....................  
.................... //interrumcion de llegada de datos 
.................... #int_rda 
.................... void rb_isr() { 
....................     if (kbhit()) { 
*
00D4:  BTFSS  F9E.5
00D6:  BRA    00E4
....................         dato_recibido = getc(); 
00D8:  BRA    0096
00DA:  MOVFF  01,1C
....................         delay_ms(4); 
00DE:  MOVLW  04
00E0:  MOVWF  3C
00E2:  RCALL  00AE
....................     } 
00E4:  BCF    F9E.5
00E6:  GOTO   0054
.................... } 
....................  
.................... float leerADC(){ 
....................     return resolucion * (float) (READ_ADC()); 
*
023E:  BSF    FC2.1
0240:  BTFSC  FC2.1
0242:  BRA    0240
0244:  MOVFF  FC4,03
0248:  MOVFF  FC3,22
024C:  MOVFF  FC4,23
0250:  BRA    0114
0252:  MOVFF  1B,32
0256:  MOVFF  1A,31
025A:  MOVFF  19,30
025E:  MOVFF  18,2F
0262:  MOVFF  03,36
0266:  MOVFF  02,35
026A:  MOVFF  01,34
026E:  MOVFF  00,33
0272:  RCALL  014C
0274:  RETURN 0
.................... } 
....................  
....................  
.................... void main() { 
*
0924:  CLRF   FF8
0926:  BCF    FD0.7
0928:  BSF    07.7
092A:  MOVLW  70
092C:  MOVWF  FD3
092E:  MOVF   FD3,W
0930:  CLRF   17
0932:  BCF    FB8.3
0934:  MOVLW  0C
0936:  MOVWF  FAF
0938:  MOVLW  A2
093A:  MOVWF  FAC
093C:  MOVLW  90
093E:  MOVWF  FAB
0940:  MOVLW  0A
0942:  MOVWF  1B
0944:  MOVLW  28
0946:  MOVWF  1A
0948:  MOVLW  20
094A:  MOVWF  19
094C:  MOVLW  77
094E:  MOVWF  18
0950:  MOVLW  30
0952:  MOVWF  1C
0954:  MOVF   FC1,W
0956:  ANDLW  C0
0958:  IORLW  0F
095A:  MOVWF  FC1
095C:  MOVLW  07
095E:  MOVWF  FB4
....................     output_high(PIN_B2); 
0960:  BSF    F8A.2
....................     //habilita las interrupciones por serial 
....................     enable_interrupts(int_rda); 
0962:  BSF    F9D.5
....................     enable_interrupts(global); 
0964:  MOVLW  C0
0966:  IORWF  FF2,F
....................  
....................     // configura los puertos 
....................     define_puertos(); 
0968:  GOTO   00EA
....................  
....................     // se configura el canal del adc 
....................     SET_ADC_CHANNEL(0); 
096C:  MOVLW  00
096E:  MOVWF  01
0970:  MOVF   FC2,W
0972:  ANDLW  C3
0974:  IORWF  01,W
0976:  MOVWF  FC2
0978:  CLRF   16
097A:  BTFSC  FF2.7
097C:  BSF    16.7
097E:  BCF    FF2.7
....................      
....................     //configuracion del pwm 
....................     //setup_timer_2(T2_DIV_BY_4 ,125 ,1); 
....................     //setup_ccp1(CCP_PWM); 
....................      
....................  
....................     while (true) { 
....................          
....................         // esta en este metodo hasta que pese algo 
....................         while(true){ 
....................             delay_ms(200); 
0980:  MOVLW  C8
0982:  MOVWF  3C
0984:  CALL   00AE
0988:  BTFSC  16.7
098A:  BSF    FF2.7
....................             if(leerADC() > 1.0f){ 
098C:  RCALL  023E
098E:  MOVFF  03,25
0992:  MOVFF  02,24
0996:  MOVFF  01,23
099A:  MOVFF  00,22
099E:  CLRF   29
09A0:  CLRF   28
09A2:  CLRF   27
09A4:  MOVLW  7F
09A6:  MOVWF  26
09A8:  MOVFF  03,2D
09AC:  MOVFF  02,2C
09B0:  MOVFF  01,2B
09B4:  MOVFF  00,2A
09B8:  BRA    0276
09BA:  BNC   09BE
....................                 break; 
09BC:  BRA    09C0
....................             } 
09BE:  BRA    0978
....................         } 
....................          
....................         // se detiene la banda 
....................         output_low(PIN_B2); 
09C0:  BCF    F8A.2
....................  
....................         // espera 1s mientras cuadra la caja 
....................         delay_ms(1000); 
09C2:  MOVLW  04
09C4:  MOVWF  22
09C6:  CLRF   16
09C8:  BTFSC  FF2.7
09CA:  BSF    16.7
09CC:  BCF    FF2.7
09CE:  MOVLW  FA
09D0:  MOVWF  3C
09D2:  CALL   00AE
09D6:  BTFSC  16.7
09D8:  BSF    FF2.7
09DA:  DECFSZ 22,F
09DC:  BRA    09C6
....................  
....................         // se calcula el promedio del peso 
....................         float promedio = 0.0f; 
09DE:  CLRF   21
09E0:  CLRF   20
09E2:  CLRF   1F
09E4:  CLRF   1E
....................  
....................         for(i = 0; i < 5; i++){ 
09E6:  CLRF   1D
09E8:  MOVF   1D,W
09EA:  SUBLW  04
09EC:  BNC   0A54
....................             delay_ms(300); 
09EE:  MOVLW  02
09F0:  MOVWF  22
09F2:  CLRF   16
09F4:  BTFSC  FF2.7
09F6:  BSF    16.7
09F8:  BCF    FF2.7
09FA:  MOVLW  96
09FC:  MOVWF  3C
09FE:  CALL   00AE
0A02:  BTFSC  16.7
0A04:  BSF    FF2.7
0A06:  DECFSZ 22,F
0A08:  BRA    09F2
....................             promedio += leerADC(); 
0A0A:  RCALL  023E
0A0C:  MOVFF  FEA,23
0A10:  MOVFF  FE9,22
0A14:  BCF    FD8.1
0A16:  MOVFF  21,27
0A1A:  MOVFF  20,26
0A1E:  MOVFF  1F,25
0A22:  MOVFF  1E,24
0A26:  MOVFF  03,2B
0A2A:  MOVFF  02,2A
0A2E:  MOVFF  01,29
0A32:  MOVFF  00,28
0A36:  BRA    02EE
0A38:  MOVFF  23,FEA
0A3C:  MOVFF  22,FE9
0A40:  MOVFF  03,21
0A44:  MOVFF  02,20
0A48:  MOVFF  01,1F
0A4C:  MOVFF  00,1E
0A50:  INCF   1D,F
0A52:  BRA    09E8
....................         } 
....................         promedio /= 5; 
0A54:  MOVFF  21,25
0A58:  MOVFF  20,24
0A5C:  MOVFF  1F,23
0A60:  MOVFF  1E,22
0A64:  CLRF   29
0A66:  CLRF   28
0A68:  MOVLW  20
0A6A:  MOVWF  27
0A6C:  MOVLW  81
0A6E:  MOVWF  26
0A70:  BRA    055A
0A72:  MOVFF  03,21
0A76:  MOVFF  02,20
0A7A:  MOVFF  01,1F
0A7E:  MOVFF  00,1E
....................          
....................         // se envia el peso por r232 
....................         printf("%1.4f", promedio); 
0A82:  MOVLW  89
0A84:  MOVWF  FE9
0A86:  MOVFF  21,25
0A8A:  MOVFF  20,24
0A8E:  MOVFF  1F,23
0A92:  MOVFF  1E,22
0A96:  MOVLW  04
0A98:  MOVWF  26
0A9A:  BRA    0784
....................  
....................         //**************** servo 1 (pasa a la otra banda) *************** 
....................         delay_ms(1000); 
0A9C:  MOVLW  04
0A9E:  MOVWF  22
0AA0:  CLRF   16
0AA2:  BTFSC  FF2.7
0AA4:  BSF    16.7
0AA6:  BCF    FF2.7
0AA8:  MOVLW  FA
0AAA:  MOVWF  3C
0AAC:  CALL   00AE
0AB0:  BTFSC  16.7
0AB2:  BSF    FF2.7
0AB4:  DECFSZ 22,F
0AB6:  BRA    0AA0
....................        
....................       // brazo 90 grados 
....................         for(i = 0; i < 15; i++){ 
0AB8:  CLRF   1D
0ABA:  MOVF   1D,W
0ABC:  SUBLW  0E
0ABE:  BNC   0B0C
....................             output_high(PIN_C2); 
0AC0:  BSF    F8B.2
....................             delay_us(1500); 
0AC2:  CLRF   16
0AC4:  BTFSC  FF2.7
0AC6:  BSF    16.7
0AC8:  BCF    FF2.7
0ACA:  MOVLW  01
0ACC:  MOVWF  3C
0ACE:  CALL   00AE
0AD2:  BTFSC  16.7
0AD4:  BSF    FF2.7
0AD6:  MOVLW  02
0AD8:  MOVWF  22
0ADA:  MOVLW  F8
0ADC:  MOVWF  23
0ADE:  RCALL  0906
0AE0:  DECFSZ 22,F
0AE2:  BRA    0ADA
....................             output_low(PIN_C2); 
0AE4:  BCF    F8B.2
....................             delay_us(18500); 
0AE6:  CLRF   16
0AE8:  BTFSC  FF2.7
0AEA:  BSF    16.7
0AEC:  BCF    FF2.7
0AEE:  MOVLW  12
0AF0:  MOVWF  3C
0AF2:  CALL   00AE
0AF6:  BTFSC  16.7
0AF8:  BSF    FF2.7
0AFA:  MOVLW  02
0AFC:  MOVWF  22
0AFE:  MOVLW  F8
0B00:  MOVWF  23
0B02:  RCALL  0906
0B04:  DECFSZ 22,F
0B06:  BRA    0AFE
0B08:  INCF   1D,F
0B0A:  BRA    0ABA
....................         } 
....................         
....................         
....................        for(i = 0; i < 15; i++){ 
0B0C:  CLRF   1D
0B0E:  MOVF   1D,W
0B10:  SUBLW  0E
0B12:  BNC   0B4C
....................             output_high(PIN_C2); 
0B14:  BSF    F8B.2
....................             delay_us(500); 
0B16:  MOVLW  02
0B18:  MOVWF  22
0B1A:  MOVLW  F8
0B1C:  MOVWF  23
0B1E:  RCALL  0906
0B20:  DECFSZ 22,F
0B22:  BRA    0B1A
....................             output_low(PIN_C2); 
0B24:  BCF    F8B.2
....................             delay_us(19500); 
0B26:  CLRF   16
0B28:  BTFSC  FF2.7
0B2A:  BSF    16.7
0B2C:  BCF    FF2.7
0B2E:  MOVLW  13
0B30:  MOVWF  3C
0B32:  CALL   00AE
0B36:  BTFSC  16.7
0B38:  BSF    FF2.7
0B3A:  MOVLW  02
0B3C:  MOVWF  22
0B3E:  MOVLW  F8
0B40:  MOVWF  23
0B42:  RCALL  0906
0B44:  DECFSZ 22,F
0B46:  BRA    0B3E
0B48:  INCF   1D,F
0B4A:  BRA    0B0E
....................         } 
....................          
....................          
....................         // corre las 3 bandas del rele 
....................         output_low(PIN_A5); 
0B4C:  BCF    F89.5
....................         delay_ms(1000); 
0B4E:  MOVLW  04
0B50:  MOVWF  22
0B52:  CLRF   16
0B54:  BTFSC  FF2.7
0B56:  BSF    16.7
0B58:  BCF    FF2.7
0B5A:  MOVLW  FA
0B5C:  MOVWF  3C
0B5E:  CALL   00AE
0B62:  BTFSC  16.7
0B64:  BSF    FF2.7
0B66:  DECFSZ 22,F
0B68:  BRA    0B52
....................         output_high(PIN_A5); 
0B6A:  BSF    F89.5
....................          
....................         /* 
....................         ENABLE RA3 
....................         datos: 
....................               A1 
....................               A2 
....................         */ 
....................          
....................       output_high(PIN_A1); 
0B6C:  BSF    F89.1
....................       output_low(PIN_A2); 
0B6E:  BCF    F89.2
....................          
....................          
....................         for(i = 0; i < 200; i++){ 
0B70:  CLRF   1D
0B72:  MOVF   1D,W
0B74:  SUBLW  C7
0B76:  BNC   0BA8
....................             output_high(PIN_A3); 
0B78:  BSF    F89.3
0B7A:  CLRF   16
0B7C:  BTFSC  FF2.7
0B7E:  BSF    16.7
0B80:  BCF    FF2.7
....................             delay_ms(6); 
0B82:  MOVLW  06
0B84:  MOVWF  3C
0B86:  CALL   00AE
0B8A:  BTFSC  16.7
0B8C:  BSF    FF2.7
....................             output_low(PIN_A3); 
0B8E:  BCF    F89.3
0B90:  CLRF   16
0B92:  BTFSC  FF2.7
0B94:  BSF    16.7
0B96:  BCF    FF2.7
....................             delay_ms(14); 
0B98:  MOVLW  0E
0B9A:  MOVWF  3C
0B9C:  CALL   00AE
0BA0:  BTFSC  16.7
0BA2:  BSF    FF2.7
0BA4:  INCF   1D,F
0BA6:  BRA    0B72
....................         } 
....................          
....................       output_low(PIN_A1); 
0BA8:  BCF    F89.1
....................       output_high(PIN_A2); 
0BAA:  BSF    F89.2
....................        
....................          for(i = 0; i < 150; i++){ 
0BAC:  CLRF   1D
0BAE:  MOVF   1D,W
0BB0:  SUBLW  95
0BB2:  BNC   0BE4
....................             output_high(PIN_A3); 
0BB4:  BSF    F89.3
0BB6:  CLRF   16
0BB8:  BTFSC  FF2.7
0BBA:  BSF    16.7
0BBC:  BCF    FF2.7
....................             delay_ms(5); 
0BBE:  MOVLW  05
0BC0:  MOVWF  3C
0BC2:  CALL   00AE
0BC6:  BTFSC  16.7
0BC8:  BSF    FF2.7
....................             output_low(PIN_A3); 
0BCA:  BCF    F89.3
0BCC:  CLRF   16
0BCE:  BTFSC  FF2.7
0BD0:  BSF    16.7
0BD2:  BCF    FF2.7
....................             delay_ms(15); 
0BD4:  MOVLW  0F
0BD6:  MOVWF  3C
0BD8:  CALL   00AE
0BDC:  BTFSC  16.7
0BDE:  BSF    FF2.7
0BE0:  INCF   1D,F
0BE2:  BRA    0BAE
....................         } 
....................          
....................         
....................     // bazo cajas pesadas 
....................         for(i = 0; i < 60; i++){ 
0BE4:  CLRF   1D
0BE6:  MOVF   1D,W
0BE8:  SUBLW  3B
0BEA:  BNC   0C24
....................             output_high(PIN_C1); 
0BEC:  BSF    F8B.1
....................             delay_us(500); 
0BEE:  MOVLW  02
0BF0:  MOVWF  22
0BF2:  MOVLW  F8
0BF4:  MOVWF  23
0BF6:  RCALL  0906
0BF8:  DECFSZ 22,F
0BFA:  BRA    0BF2
....................             output_low(PIN_C1); 
0BFC:  BCF    F8B.1
....................             delay_us(19500); 
0BFE:  CLRF   16
0C00:  BTFSC  FF2.7
0C02:  BSF    16.7
0C04:  BCF    FF2.7
0C06:  MOVLW  13
0C08:  MOVWF  3C
0C0A:  CALL   00AE
0C0E:  BTFSC  16.7
0C10:  BSF    FF2.7
0C12:  MOVLW  02
0C14:  MOVWF  22
0C16:  MOVLW  F8
0C18:  MOVWF  23
0C1A:  RCALL  0906
0C1C:  DECFSZ 22,F
0C1E:  BRA    0C16
0C20:  INCF   1D,F
0C22:  BRA    0BE6
....................         } 
....................          
....................         for(i = 0; i < 60; i++){ 
0C24:  CLRF   1D
0C26:  MOVF   1D,W
0C28:  SUBLW  3B
0C2A:  BNC   0C78
....................             output_high(PIN_C1); 
0C2C:  BSF    F8B.1
....................             delay_us(2500); 
0C2E:  CLRF   16
0C30:  BTFSC  FF2.7
0C32:  BSF    16.7
0C34:  BCF    FF2.7
0C36:  MOVLW  02
0C38:  MOVWF  3C
0C3A:  CALL   00AE
0C3E:  BTFSC  16.7
0C40:  BSF    FF2.7
0C42:  MOVLW  02
0C44:  MOVWF  22
0C46:  MOVLW  F8
0C48:  MOVWF  23
0C4A:  RCALL  0906
0C4C:  DECFSZ 22,F
0C4E:  BRA    0C46
....................             output_low(PIN_C1); 
0C50:  BCF    F8B.1
....................             delay_us(17500); 
0C52:  CLRF   16
0C54:  BTFSC  FF2.7
0C56:  BSF    16.7
0C58:  BCF    FF2.7
0C5A:  MOVLW  11
0C5C:  MOVWF  3C
0C5E:  CALL   00AE
0C62:  BTFSC  16.7
0C64:  BSF    FF2.7
0C66:  MOVLW  02
0C68:  MOVWF  22
0C6A:  MOVLW  F8
0C6C:  MOVWF  23
0C6E:  RCALL  0906
0C70:  DECFSZ 22,F
0C72:  BRA    0C6A
0C74:  INCF   1D,F
0C76:  BRA    0C26
....................         } 
....................          
....................         // bazo cajas livianas 
....................         for(i = 0; i < 60; i++){ 
0C78:  CLRF   1D
0C7A:  MOVF   1D,W
0C7C:  SUBLW  3B
0C7E:  BNC   0CB8
....................             output_high(PIN_C0); 
0C80:  BSF    F8B.0
....................             delay_us(500); 
0C82:  MOVLW  02
0C84:  MOVWF  22
0C86:  MOVLW  F8
0C88:  MOVWF  23
0C8A:  RCALL  0906
0C8C:  DECFSZ 22,F
0C8E:  BRA    0C86
....................             output_low(PIN_C0); 
0C90:  BCF    F8B.0
....................             delay_us(19500); 
0C92:  CLRF   16
0C94:  BTFSC  FF2.7
0C96:  BSF    16.7
0C98:  BCF    FF2.7
0C9A:  MOVLW  13
0C9C:  MOVWF  3C
0C9E:  CALL   00AE
0CA2:  BTFSC  16.7
0CA4:  BSF    FF2.7
0CA6:  MOVLW  02
0CA8:  MOVWF  22
0CAA:  MOVLW  F8
0CAC:  MOVWF  23
0CAE:  RCALL  0906
0CB0:  DECFSZ 22,F
0CB2:  BRA    0CAA
0CB4:  INCF   1D,F
0CB6:  BRA    0C7A
....................         } 
....................          
....................         for(i = 0; i < 60; i++){ 
0CB8:  CLRF   1D
0CBA:  MOVF   1D,W
0CBC:  SUBLW  3B
0CBE:  BNC   0D0C
....................             output_high(PIN_C0); 
0CC0:  BSF    F8B.0
....................             delay_us(2500); 
0CC2:  CLRF   16
0CC4:  BTFSC  FF2.7
0CC6:  BSF    16.7
0CC8:  BCF    FF2.7
0CCA:  MOVLW  02
0CCC:  MOVWF  3C
0CCE:  CALL   00AE
0CD2:  BTFSC  16.7
0CD4:  BSF    FF2.7
0CD6:  MOVLW  02
0CD8:  MOVWF  22
0CDA:  MOVLW  F8
0CDC:  MOVWF  23
0CDE:  RCALL  0906
0CE0:  DECFSZ 22,F
0CE2:  BRA    0CDA
....................             output_low(PIN_C0); 
0CE4:  BCF    F8B.0
....................             delay_us(17500); 
0CE6:  CLRF   16
0CE8:  BTFSC  FF2.7
0CEA:  BSF    16.7
0CEC:  BCF    FF2.7
0CEE:  MOVLW  11
0CF0:  MOVWF  3C
0CF2:  CALL   00AE
0CF6:  BTFSC  16.7
0CF8:  BSF    FF2.7
0CFA:  MOVLW  02
0CFC:  MOVWF  22
0CFE:  MOVLW  F8
0D00:  MOVWF  23
0D02:  RCALL  0906
0D04:  DECFSZ 22,F
0D06:  BRA    0CFE
0D08:  INCF   1D,F
0D0A:  BRA    0CBA
....................         } 
....................          
....................         output_high(PIN_B2); 
0D0C:  BSF    F8A.2
0D0E:  BRA    0978
....................          
....................     } 
.................... } 
0D10:  SLEEP 

Configuration Fuses:
   Word  1: C827   PLL12 CPUDIV1 USBDIV INTRC_IO FCMEN IESO
   Word  2: 1E3E   PUT BROWNOUT BORV21 VREGEN NOWDT WDT32768
   Word  3: 8700   CCP2C1 PBADEN LPT1OSC MCLR
   Word  4: 0081   STVREN NOLVP NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
